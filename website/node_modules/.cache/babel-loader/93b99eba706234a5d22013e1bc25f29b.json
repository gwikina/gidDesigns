{"ast":null,"code":"var _jsxFileName = \"/Users/giddywiddy/website/src/PortfolioConatiner/Home/Header/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from '../../../utilities/commonUtils';\nimport ScrollService from '../../../utilities/ScrollService';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n\n  let cureentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClass(i),\n      onClick: () => switchScreen(i, screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", screen.screen_name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this)\n    }, screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this));\n  };\n\n  const getHeaderOptionsClass = index => {\n    let classes = 'header-option';\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-separator \";\n    if (selectedScreen === index) classes += \"selected-header-option \";\n    return;\n  };\n\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: 'smooth'\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    onClick: () => setShowHeaderOptions(!showHeaderOptions),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hamburger\",\n        onClick: () => setShowHeaderOptions(!showHeaderOptions),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"header-hamburger-bars\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" gidDesigns \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\",\n        children: getHeaderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","cureentScreenSubscription","currentScreenBroadCaster","subscribe","getHeaderOptions","map","screen","i","getHeaderOptionsClass","switchScreen","screen_name","index","classes","length","screenComponent","document","getElementById","scrollIntoView","behavior"],"sources":["/Users/giddywiddy/website/src/PortfolioConatiner/Home/Header/Header.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from '../../../utilities/commonUtils'\nimport ScrollService from '../../../utilities/ScrollService'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './Header.css'\nexport default function Header() {\n    const [selectedScreen, setSelectedScreen] = useState(0)\n    const [showHeaderOptions, setShowHeaderOptions] = useState(false)\n    const updateCurrentScreen = (currentScreen) => {\n        if (!currentScreen || !currentScreen.screenInView)\n            return\n        let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView)\n        if(screenIndex < 0)\n            return\n    }\n    let cureentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen)\n    const getHeaderOptions = () => {\n        return(\n            TOTAL_SCREENS.map((screen, i) => (\n                <div key={screen.screen_name} className={getHeaderOptionsClass(i)} onClick={() => switchScreen(i, screen)}>\n                        <span> {screen.screen_name} </span>\n                </div>\n            )\n         )\n        )\n    }\n    const getHeaderOptionsClass = (index) => {\n        let classes = 'header-option'\n        if (index < TOTAL_SCREENS.length - 1)\n            classes += \"header-option-separator \"\n        if(selectedScreen === index)\n        classes += \"selected-header-option \"\n        return \n    }\n\n    const switchScreen = (index, screen) => {\n        let screenComponent = document.getElementById(screen.screen_name)\n        if(!screenComponent)\n            return\n        screenComponent.scrollIntoView({behavior: 'smooth'})\n        setSelectedScreen(index)\n        setShowHeaderOptions(false)\n    }\n    return (\n            <div className=\"header-container\" onClick={() => setShowHeaderOptions(!showHeaderOptions)}>\n                <div className=\"header-parent\">\n                    <div className=\"header-hamburger\" onClick={() => setShowHeaderOptions(!showHeaderOptions)}>\n                        <FontAwesomeIcon className=\"header-hamburger-bars\" icon={faBars} />\n                    </div>\n                    <div className=\"header-logo\">\n                        <span> gidDesigns </span>\n                    </div>\n                    <div className={showHeaderOptions? \"header-options show-hamburger-options\" : \"header-options\"}>\n                        {getHeaderOptions()}\n                    </div>\n                </div>\n            </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}